if (typeof __coverage__ === 'undefined') { __coverage__ = {}; }
if (!__coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js']) {
   __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'] = {"path":"build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js","s":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":40},"end":{"line":1,"column":59}}},"2":{"name":"(anonymous_2)","line":80,"loc":{"start":{"line":80,"column":13},"end":{"line":80,"column":29}}},"3":{"name":"ITSAModelSyncPromise","line":89,"loc":{"start":{"line":89,"column":4},"end":{"line":89,"column":36}}},"4":{"name":"(anonymous_4)","line":107,"loc":{"start":{"line":107,"column":23},"end":{"line":107,"column":41}}},"5":{"name":"(anonymous_5)","line":110,"loc":{"start":{"line":110,"column":46},"end":{"line":110,"column":73}}},"6":{"name":"(anonymous_6)","line":111,"loc":{"start":{"line":111,"column":53},"end":{"line":111,"column":78}}},"7":{"name":"(anonymous_7)","line":155,"loc":{"start":{"line":155,"column":21},"end":{"line":155,"column":40}}},"8":{"name":"(anonymous_8)","line":158,"loc":{"start":{"line":158,"column":44},"end":{"line":158,"column":71}}},"9":{"name":"(anonymous_9)","line":159,"loc":{"start":{"line":159,"column":51},"end":{"line":159,"column":76}}},"10":{"name":"(anonymous_10)","line":208,"loc":{"start":{"line":208,"column":21},"end":{"line":208,"column":40}}},"11":{"name":"(anonymous_11)","line":211,"loc":{"start":{"line":211,"column":44},"end":{"line":211,"column":71}}},"12":{"name":"(anonymous_12)","line":216,"loc":{"start":{"line":216,"column":58},"end":{"line":216,"column":81}}},"13":{"name":"(anonymous_13)","line":223,"loc":{"start":{"line":223,"column":91},"end":{"line":223,"column":116}}},"14":{"name":"(anonymous_14)","line":269,"loc":{"start":{"line":269,"column":24},"end":{"line":269,"column":43}}},"15":{"name":"(anonymous_15)","line":272,"loc":{"start":{"line":272,"column":47},"end":{"line":272,"column":74}}},"16":{"name":"(anonymous_16)","line":273,"loc":{"start":{"line":273,"column":50},"end":{"line":273,"column":62}}},"17":{"name":"finish","line":274,"loc":{"start":{"line":274,"column":24},"end":{"line":274,"column":42}}},"18":{"name":"(anonymous_18)","line":275,"loc":{"start":{"line":275,"column":65},"end":{"line":275,"column":81}}},"19":{"name":"(anonymous_19)","line":280,"loc":{"start":{"line":280,"column":61},"end":{"line":280,"column":76}}},"20":{"name":"ITSAModellistSyncPromise","line":332,"loc":{"start":{"line":332,"column":4},"end":{"line":332,"column":40}}},"21":{"name":"(anonymous_21)","line":352,"loc":{"start":{"line":352,"column":21},"end":{"line":352,"column":40}}},"22":{"name":"(anonymous_22)","line":355,"loc":{"start":{"line":355,"column":44},"end":{"line":355,"column":71}}},"23":{"name":"(anonymous_23)","line":356,"loc":{"start":{"line":356,"column":51},"end":{"line":356,"column":76}}}},"statementMap":{"1":{"start":{"line":1,"column":0},"end":{"line":400,"column":3}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":13}},"3":{"start":{"line":31,"column":3},"end":{"line":86,"column":6}},"4":{"start":{"line":81,"column":8},"end":{"line":81,"column":19}},"5":{"start":{"line":82,"column":8},"end":{"line":84,"column":23}},"6":{"start":{"line":83,"column":12},"end":{"line":83,"column":41}},"7":{"start":{"line":85,"column":8},"end":{"line":85,"column":22}},"8":{"start":{"line":89,"column":4},"end":{"line":89,"column":38}},"9":{"start":{"line":90,"column":4},"end":{"line":305,"column":13}},"10":{"start":{"line":108,"column":12},"end":{"line":108,"column":36}},"11":{"start":{"line":109,"column":12},"end":{"line":133,"column":19}},"12":{"start":{"line":111,"column":20},"end":{"line":132,"column":23}},"13":{"start":{"line":112,"column":24},"end":{"line":115,"column":30}},"14":{"start":{"line":116,"column":24},"end":{"line":131,"column":25}},"15":{"start":{"line":117,"column":28},"end":{"line":117,"column":47}},"16":{"start":{"line":118,"column":28},"end":{"line":118,"column":52}},"17":{"start":{"line":119,"column":28},"end":{"line":119,"column":61}},"18":{"start":{"line":120,"column":28},"end":{"line":120,"column":51}},"19":{"start":{"line":124,"column":28},"end":{"line":128,"column":29}},"20":{"start":{"line":125,"column":32},"end":{"line":127,"column":35}},"21":{"start":{"line":129,"column":28},"end":{"line":129,"column":62}},"22":{"start":{"line":130,"column":28},"end":{"line":130,"column":55}},"23":{"start":{"line":134,"column":12},"end":{"line":134,"column":33}},"24":{"start":{"line":156,"column":12},"end":{"line":156,"column":36}},"25":{"start":{"line":157,"column":12},"end":{"line":185,"column":19}},"26":{"start":{"line":159,"column":20},"end":{"line":184,"column":23}},"27":{"start":{"line":160,"column":24},"end":{"line":164,"column":30}},"28":{"start":{"line":165,"column":24},"end":{"line":183,"column":25}},"29":{"start":{"line":166,"column":28},"end":{"line":166,"column":47}},"30":{"start":{"line":167,"column":28},"end":{"line":167,"column":50}},"31":{"start":{"line":168,"column":28},"end":{"line":168,"column":61}},"32":{"start":{"line":169,"column":28},"end":{"line":169,"column":51}},"33":{"start":{"line":173,"column":28},"end":{"line":177,"column":29}},"34":{"start":{"line":174,"column":32},"end":{"line":176,"column":35}},"35":{"start":{"line":178,"column":28},"end":{"line":178,"column":70}},"36":{"start":{"line":179,"column":28},"end":{"line":179,"column":63}},"37":{"start":{"line":180,"column":28},"end":{"line":180,"column":50}},"38":{"start":{"line":181,"column":28},"end":{"line":181,"column":60}},"39":{"start":{"line":182,"column":28},"end":{"line":182,"column":55}},"40":{"start":{"line":186,"column":12},"end":{"line":186,"column":31}},"41":{"start":{"line":209,"column":12},"end":{"line":209,"column":36}},"42":{"start":{"line":210,"column":12},"end":{"line":248,"column":19}},"43":{"start":{"line":212,"column":20},"end":{"line":215,"column":26}},"44":{"start":{"line":216,"column":20},"end":{"line":247,"column":23}},"45":{"start":{"line":217,"column":24},"end":{"line":246,"column":25}},"46":{"start":{"line":218,"column":28},"end":{"line":218,"column":55}},"47":{"start":{"line":219,"column":28},"end":{"line":219,"column":61}},"48":{"start":{"line":220,"column":28},"end":{"line":220,"column":59}},"49":{"start":{"line":223,"column":28},"end":{"line":245,"column":31}},"50":{"start":{"line":224,"column":32},"end":{"line":224,"column":43}},"51":{"start":{"line":225,"column":32},"end":{"line":225,"column":59}},"52":{"start":{"line":226,"column":32},"end":{"line":244,"column":33}},"53":{"start":{"line":227,"column":36},"end":{"line":227,"column":55}},"54":{"start":{"line":228,"column":36},"end":{"line":228,"column":58}},"55":{"start":{"line":229,"column":36},"end":{"line":229,"column":69}},"56":{"start":{"line":230,"column":36},"end":{"line":230,"column":59}},"57":{"start":{"line":234,"column":36},"end":{"line":238,"column":37}},"58":{"start":{"line":235,"column":40},"end":{"line":237,"column":43}},"59":{"start":{"line":239,"column":36},"end":{"line":239,"column":78}},"60":{"start":{"line":240,"column":36},"end":{"line":240,"column":71}},"61":{"start":{"line":241,"column":36},"end":{"line":241,"column":58}},"62":{"start":{"line":242,"column":36},"end":{"line":242,"column":68}},"63":{"start":{"line":243,"column":36},"end":{"line":243,"column":63}},"64":{"start":{"line":249,"column":12},"end":{"line":249,"column":31}},"65":{"start":{"line":270,"column":12},"end":{"line":270,"column":36}},"66":{"start":{"line":271,"column":12},"end":{"line":300,"column":19}},"67":{"start":{"line":273,"column":20},"end":{"line":299,"column":23}},"68":{"start":{"line":274,"column":24},"end":{"line":278,"column":25}},"69":{"start":{"line":275,"column":28},"end":{"line":277,"column":31}},"70":{"start":{"line":276,"column":32},"end":{"line":276,"column":63}},"71":{"start":{"line":279,"column":24},"end":{"line":298,"column":25}},"72":{"start":{"line":280,"column":28},"end":{"line":294,"column":31}},"73":{"start":{"line":281,"column":32},"end":{"line":293,"column":33}},"74":{"start":{"line":282,"column":36},"end":{"line":286,"column":38}},"75":{"start":{"line":287,"column":36},"end":{"line":287,"column":69}},"76":{"start":{"line":288,"column":36},"end":{"line":288,"column":59}},"77":{"start":{"line":291,"column":36},"end":{"line":291,"column":45}},"78":{"start":{"line":292,"column":36},"end":{"line":292,"column":53}},"79":{"start":{"line":296,"column":28},"end":{"line":296,"column":37}},"80":{"start":{"line":297,"column":28},"end":{"line":297,"column":45}},"81":{"start":{"line":301,"column":12},"end":{"line":301,"column":54}},"82":{"start":{"line":302,"column":12},"end":{"line":302,"column":34}},"83":{"start":{"line":306,"column":4},"end":{"line":306,"column":50}},"84":{"start":{"line":307,"column":4},"end":{"line":307,"column":48}},"85":{"start":{"line":332,"column":4},"end":{"line":332,"column":42}},"86":{"start":{"line":333,"column":4},"end":{"line":384,"column":13}},"87":{"start":{"line":353,"column":12},"end":{"line":353,"column":36}},"88":{"start":{"line":354,"column":12},"end":{"line":381,"column":19}},"89":{"start":{"line":356,"column":20},"end":{"line":380,"column":23}},"90":{"start":{"line":357,"column":24},"end":{"line":361,"column":30}},"91":{"start":{"line":362,"column":24},"end":{"line":379,"column":25}},"92":{"start":{"line":363,"column":28},"end":{"line":363,"column":47}},"93":{"start":{"line":364,"column":28},"end":{"line":364,"column":50}},"94":{"start":{"line":365,"column":28},"end":{"line":365,"column":61}},"95":{"start":{"line":366,"column":28},"end":{"line":366,"column":51}},"96":{"start":{"line":370,"column":28},"end":{"line":374,"column":29}},"97":{"start":{"line":371,"column":32},"end":{"line":373,"column":35}},"98":{"start":{"line":375,"column":28},"end":{"line":375,"column":70}},"99":{"start":{"line":376,"column":28},"end":{"line":376,"column":60}},"100":{"start":{"line":377,"column":28},"end":{"line":377,"column":60}},"101":{"start":{"line":378,"column":28},"end":{"line":378,"column":55}},"102":{"start":{"line":382,"column":12},"end":{"line":382,"column":31}},"103":{"start":{"line":385,"column":4},"end":{"line":385,"column":58}},"104":{"start":{"line":386,"column":4},"end":{"line":386,"column":56}}},"branchMap":{"1":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":22},"end":{"line":108,"column":29}},{"start":{"line":108,"column":33},"end":{"line":108,"column":35}}]},"2":{"line":116,"type":"if","locations":[{"start":{"line":116,"column":24},"end":{"line":116,"column":24}},{"start":{"line":116,"column":24},"end":{"line":116,"column":24}}]},"3":{"line":124,"type":"if","locations":[{"start":{"line":124,"column":28},"end":{"line":124,"column":28}},{"start":{"line":124,"column":28},"end":{"line":124,"column":28}}]},"4":{"line":156,"type":"binary-expr","locations":[{"start":{"line":156,"column":22},"end":{"line":156,"column":29}},{"start":{"line":156,"column":33},"end":{"line":156,"column":35}}]},"5":{"line":165,"type":"if","locations":[{"start":{"line":165,"column":24},"end":{"line":165,"column":24}},{"start":{"line":165,"column":24},"end":{"line":165,"column":24}}]},"6":{"line":173,"type":"if","locations":[{"start":{"line":173,"column":28},"end":{"line":173,"column":28}},{"start":{"line":173,"column":28},"end":{"line":173,"column":28}}]},"7":{"line":209,"type":"binary-expr","locations":[{"start":{"line":209,"column":22},"end":{"line":209,"column":29}},{"start":{"line":209,"column":33},"end":{"line":209,"column":35}}]},"8":{"line":217,"type":"if","locations":[{"start":{"line":217,"column":24},"end":{"line":217,"column":24}},{"start":{"line":217,"column":24},"end":{"line":217,"column":24}}]},"9":{"line":223,"type":"cond-expr","locations":[{"start":{"line":223,"column":61},"end":{"line":223,"column":69}},{"start":{"line":223,"column":72},"end":{"line":223,"column":80}}]},"10":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":32},"end":{"line":226,"column":32}},{"start":{"line":226,"column":32},"end":{"line":226,"column":32}}]},"11":{"line":234,"type":"if","locations":[{"start":{"line":234,"column":36},"end":{"line":234,"column":36}},{"start":{"line":234,"column":36},"end":{"line":234,"column":36}}]},"12":{"line":270,"type":"binary-expr","locations":[{"start":{"line":270,"column":22},"end":{"line":270,"column":29}},{"start":{"line":270,"column":33},"end":{"line":270,"column":35}}]},"13":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":24},"end":{"line":279,"column":24}},{"start":{"line":279,"column":24},"end":{"line":279,"column":24}}]},"14":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":28},"end":{"line":279,"column":42}},{"start":{"line":279,"column":46},"end":{"line":279,"column":63}}]},"15":{"line":281,"type":"if","locations":[{"start":{"line":281,"column":32},"end":{"line":281,"column":32}},{"start":{"line":281,"column":32},"end":{"line":281,"column":32}}]},"16":{"line":353,"type":"binary-expr","locations":[{"start":{"line":353,"column":22},"end":{"line":353,"column":29}},{"start":{"line":353,"column":33},"end":{"line":353,"column":35}}]},"17":{"line":362,"type":"if","locations":[{"start":{"line":362,"column":24},"end":{"line":362,"column":24}},{"start":{"line":362,"column":24},"end":{"line":362,"column":24}}]},"18":{"line":370,"type":"if","locations":[{"start":{"line":370,"column":28},"end":{"line":370,"column":28}},{"start":{"line":370,"column":28},"end":{"line":370,"column":28}}]}},"code":["(function () { YUI.add('gallery-itsamodelsyncpromise', function (Y, NAME) {","","'use strict';","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.Model with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.load and Model.save and Model.destroy, you can use:"," *"," * <b>Model.loadPromise</b>"," * <b>Model.savePromise</b>"," * <b>Model.submitPromise</b>"," * <b>Model.destroyPromise</b>"," *"," * <b>The sync-layer MUST call the callback-function of its related promise-method, otherwise the promises are not resolved.</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @extends Model"," * @class ITSAModelSyncPromise"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","","   var YArray = Y.Array,","   /**","     * Fired when an error occurs, such as when an attribute (or property) doesn't validate or when","     * the sync layer submit-function returns an error.","     * @event error","     * @param e {EventFacade} Event Facade including:","     * @param e.error {any} Error message.","     * @param e.src {String} Source of the error. May be one of the following (or any","     *                     custom error source defined by a Model subclass):","     *","     * `submit`: An error submitting the model from within a sync layer.","     *","     * `attributevalidation`: An error validating an attribute (or property). The attribute (or objectproperty)","     *                        that failed validation will be provided as the `attribute` property on the event facade.","     *","     * @param e.attribute {String} The attribute/property that failed validation.","     * @param e.validationerror {String} The errormessage in case of attribute-validation error.","    **/","    EVT_ERROR = 'error',","   /**","     * Fired after model is submitted from the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SUBMIT = 'submit',","   /**","     * Fired after model is read from the sync layer.","     * @event load","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_LOAD = 'load',","   /**","     * Fired after model is saved through the sync layer.","     * @event submit","     * @param e {EventFacade} Event Facade including:","     * @param [e.options] {Object} The options=object that was passed to the sync-layer, if there was one.","     * @param [e.parsed] {Object} The parsed version of the sync layer's response to the submit-request, if there was a response.","     * @param [e.response] {any} The sync layer's raw, unparsed response to the submit-request, if there was one.","     * @since 0.1","    **/","    EVT_SAVE = 'save',","","    PARSED = function(value) {","        var parsed;","        try {","            parsed = Y.JSON.parse(value);","        } catch (ex) {}","        return parsed;","    };","","    // -- Mixing extra Methods to Y.Model -----------------------------------","    function ITSAModelSyncPromise() {}","    Y.mix(ITSAModelSyncPromise.prototype, {","       /**","         * Submits this model to the server.","         *","         * This method delegates to the `sync()` method to perform the actual submit","         * operation, which is Y.Promise. Read the Promise.then() and look for resolve(response, options) OR reject(reason).","         *","         * A successful submit-operation will also fire a `submit` event, while an unsuccessful","         * submit operation will fire an `error` event with the `src` value \"submit\".","         *","         * <b>CAUTION</b> The sync-method MUST call its callback-function to make the promised resolved.","         *","         * @method submitPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        submitPromise: function(options) {","            options = options || {};","            var instance = this,","                submitpromise = new Y.Promise(function (resolve, reject) {","                    instance.sync('submit', options, function (err, response) {","                        var facade = {","                                options : options,","                                response: response","                            };","                        if (err) {","                            facade.error = err;","                            facade.src   = 'submit';","                            instance.fire(EVT_ERROR, facade);","                            reject(new Error(err));","                        }","                        else {","                            // Lazy publish.","                            if (!instance._submitEvent) {","                                instance._submitEvent = instance.publish(EVT_SUBMIT, {","                                    preventable: false","                                });","                            }","                            instance.fire(EVT_SUBMIT, facade);","                            resolve(response, options);","                        }","                    });","                });","            return submitpromise;","        },","","","        /**","         * Loads this model from the server.","         *","         * This method delegates to the `sync()` method to perform the actual load","         * operation, which is an asynchronous action. Specify a _callback_ function to","         * be notified of success or failure.","         *","         * A successful load operation will fire a `load` event, while an unsuccessful","         * load operation will fire an `error` event with the `src` value \"load\".","         *","         * If the load operation succeeds and one or more of the loaded attributes","         * differ from this model's current attributes, a `change` event will be fired.","         * @method loadPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        loadPromise: function (options) {","            options = options || {};","            var instance = this,","                loadpromise = new Y.Promise(function (resolve, reject) {","                    instance.sync('read', options, function (err, response) {","                        var parsed,","                            facade = {","                                options : options,","                                response: response","                            };","                        if (err) {","                            facade.error = err;","                            facade.src   = 'load';","                            instance.fire(EVT_ERROR, facade);","                            reject(new Error(err));","                        }","                        else {","                            // Lazy publish.","                            if (!instance._loadEvent) {","                                instance._loadEvent = instance.publish(EVT_LOAD, {","                                    preventable: false","                                });","                            }","                            parsed = facade.parsed = PARSED(response);","                            instance.setAttrs(parsed, options);","                            instance.changed = {};","                            instance.fire(EVT_LOAD, facade);","                            resolve(response, options);","                        }","                    });","                });","            return loadpromise;","        },","","       /**","        * Saves this model to the server.","        *","        * This method delegates to the `sync()` method to perform the actual save","        * operation, which is an asynchronous action. Specify a _callback_ function to","        * be notified of success or failure.","        *","        * A successful save operation will fire a `save` event, while an unsuccessful","        * save operation will fire an `error` event with the `src` value \"save\".","        *","        * If the save operation succeeds and one or more of the attributes returned in","        * the server's response differ from this model's current attributes, a","        * `change` event will be fired.","        *","        * @method savePromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        savePromise: function (options) {","            options = options || {};","            var instance = this,","                savepromise = new Y.Promise(function (resolve, reject) {","                    var facade = {","                            options : options,","                            src     :'save'","                        };","                    instance._validate(instance.toJSON(), function (validateErr) {","                        if (validateErr) {","                            facade.error = validateErr;","                            instance.fire(EVT_ERROR, facade);","                            reject(new Error(validateErr));","                        }","                        else {","                            instance.sync(instance.isNew() ? 'create' : 'update', options, function (err, response) {","                                var parsed;","                                facade.response = response;","                                if (err) {","                                    facade.error = err;","                                    facade.src   = 'save';","                                    instance.fire(EVT_ERROR, facade);","                                    reject(new Error(err));","                                }","                                else {","                                    // Lazy publish.","                                    if (!instance._saveEvent) {","                                        instance._saveEvent = instance.publish(EVT_SAVE, {","                                            preventable: false","                                        });","                                    }","                                    parsed = facade.parsed = PARSED(response);","                                    instance.setAttrs(parsed, options);","                                    instance.changed = {};","                                    instance.fire(EVT_SAVE, facade);","                                    resolve(response, options);","                                }","                            });","                        }","                    });","                });","            return savepromise;","        },","","      /**","         * Destroys this model instance and removes it from its containing lists, if any.","         *","         * The _callback_, if one is provided, will be called after the model is","         * destroyed.","         *","         * If `options.remove` is `true`, then this method delegates to the `sync()`","         * method to delete the model from the persistence layer, which is an","         * asynchronous action. In this case, the _callback_ (if provided) will be","         * called after the sync layer indicates success or failure of the delete","         * operation.","         *","         * @method destroyPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        destroyPromise: function (options) {","            options = options || {};","            var instance = this,","                destroypromise = new Y.Promise(function (resolve, reject) {","                    instance.onceAfter('destroy', function () {","                        function finish() {","                            YArray.each(instance.lists.concat(), function (list) {","                                list.remove(instance, options);","                            });","                        }","                        if (options.remove || options['delete']) {","                            instance.sync('delete', options, function (err) {","                                if (err) {","                                    var facade = {","                                        error   : err,","                                        src     : 'destroy',","                                        options : options","                                    };","                                    instance.fire(EVT_ERROR, facade);","                                    reject(new Error(err));","                                }","                                else {","                                    finish();","                                    resolve(options);","                                }","                            });","                        } else {","                            finish();","                            resolve(options);","                        }","                    });","                });","            Y.Model.superclass.destroy.call(instance);","            return destroypromise;","        }","","    }, true);","    Y.ITSAModelSyncPromise = ITSAModelSyncPromise;","    Y.Base.mix(Y.Model, [ITSAModelSyncPromise]);","","    //==============================================================================","","/**"," *"," * Extention ITSAModelSyncPromise"," *"," *"," * Extends Y.ModelList with Promised sync-methods. The synclayer can be made just as usual. But instead of calling"," * Model.loadyou can use:"," *"," * <b>Model.loadPromise</b>"," *"," * @module gallery-itsamodelsyncpromise"," * @extends ModelList"," * @class ITSAModellistSyncPromise"," * @constructor"," * @since 0.1"," *"," * <i>Copyright (c) 2013 Marco Asbreuk - http://itsasbreuk.nl</i>"," * YUI BSD License - http://developer.yahoo.com/yui/license.html"," *","*/","    // -- Mixing extra Methods to Y.Model -----------------------------------","    function ITSAModellistSyncPromise() {}","    Y.mix(ITSAModellistSyncPromise.prototype, {","        /**","         * Loads models from the server and adds them into the ModelList","         *","         * This method delegates to the `sync()` method to perform the actual load","         * operation, which is an asynchronous action. Specify a _callback_ function to","         * be notified of success or failure.","         *","         * A successful load operation will fire a `load` event, while an unsuccessful","         * load operation will fire an `error` event with the `src` value \"load\".","         *","         * If the load operation succeeds and one or more of the loaded attributes","         * differ from this model's current attributes, a `change` event will be fired.","         *","         * @method loadPromise","         * @param {Object} [options] Options to be passed to `sync()`. It's up to the custom sync","         *                 implementation to determine what options it supports or requires, if any.","         * @return {Y.Promise} promised response --> resolve(response, options) OR reject(reason).","        **/","        loadPromise: function (options) {","            options = options || {};","            var instance = this,","                loadpromise = new Y.Promise(function (resolve, reject) {","                    instance.sync('read', options, function (err, response) {","                        var parsed,","                            facade = {","                                options : options,","                                response: response","                            };","                        if (err) {","                            facade.error = err;","                            facade.src   = 'load';","                            instance.fire(EVT_ERROR, facade);","                            reject(new Error(err));","                        }","                        else {","                            // Lazy publish.","                            if (!instance._loadEvent) {","                                instance._loadEvent = instance.publish(EVT_LOAD, {","                                    preventable: false","                                });","                            }","                            parsed = facade.parsed = PARSED(response);","                            instance.reset(parsed, options);","                            instance.fire(EVT_LOAD, facade);","                            resolve(response, options);","                        }","                    });","                });","            return loadpromise;","        }","    }, true);","    Y.ITSAModellistSyncPromise = ITSAModellistSyncPromise;","    Y.Base.mix(Y.ModelList, [ITSAModellistSyncPromise]);","","}, 'gallery-2013.05.10-00-54', {","    \"requires\": [","        \"yui-base\",","        \"base-base\",","        \"base-build\",","        \"node-base\",","        \"json-parse\",","        \"promise\",","        \"model\",","        \"model-list\",","        \"yui-later\"","    ]","});","","}());"]};
}
var __cov_XDpPLj7Fz_gPyxqtPO4DtQ = __coverage__['build/gallery-itsamodelsyncpromise/gallery-itsamodelsyncpromise.js'];
__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['1']++;YUI.add('gallery-itsamodelsyncpromise',function(Y,NAME){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['1']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['2']++;'use strict';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['3']++;var YArray=Y.Array,EVT_ERROR='error',EVT_SUBMIT='submit',EVT_LOAD='load',EVT_SAVE='save',PARSED=function(value){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['2']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['4']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['5']++;try{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['6']++;parsed=Y.JSON.parse(value);}catch(ex){}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['7']++;return parsed;};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['8']++;function ITSAModelSyncPromise(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['3']++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['9']++;Y.mix(ITSAModelSyncPromise.prototype,{submitPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['4']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['10']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['1'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['11']++;var instance=this,submitpromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['5']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['12']++;instance.sync('submit',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['6']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['13']++;var facade={options:options,response:response};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['14']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['15']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['16']++;facade.src='submit';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['17']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['18']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['2'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['19']++;if(!instance._submitEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['20']++;instance._submitEvent=instance.publish(EVT_SUBMIT,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['3'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['21']++;instance.fire(EVT_SUBMIT,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['22']++;resolve(response,options);}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['23']++;return submitpromise;},loadPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['7']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['24']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['4'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['25']++;var instance=this,loadpromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['8']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['26']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['9']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['27']++;var parsed,facade={options:options,response:response};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['28']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['29']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['30']++;facade.src='load';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['31']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['32']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['5'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['33']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['34']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['6'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['35']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['36']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['37']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['38']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['39']++;resolve(response,options);}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['40']++;return loadpromise;},savePromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['10']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['41']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['7'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['42']++;var instance=this,savepromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['11']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['43']++;var facade={options:options,src:'save'};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['44']++;instance._validate(instance.toJSON(),function(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['12']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['45']++;if(validateErr){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['46']++;facade.error=validateErr;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['47']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['48']++;reject(new Error(validateErr));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['8'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['49']++;instance.sync(instance.isNew()?(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][0]++,'create'):(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['9'][1]++,'update'),options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['13']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['50']++;var parsed;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['51']++;facade.response=response;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['52']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['53']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['54']++;facade.src='save';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['55']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['56']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['10'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['57']++;if(!instance._saveEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['58']++;instance._saveEvent=instance.publish(EVT_SAVE,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['11'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['59']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['60']++;instance.setAttrs(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['61']++;instance.changed={};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['62']++;instance.fire(EVT_SAVE,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['63']++;resolve(response,options);}});}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['64']++;return savepromise;},destroyPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['14']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['65']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['12'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['66']++;var instance=this,destroypromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['15']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['67']++;instance.onceAfter('destroy',function(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['16']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['68']++;function finish(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['17']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['69']++;YArray.each(instance.lists.concat(),function(list){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['18']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['70']++;list.remove(instance,options);});}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['71']++;if((__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][0]++,options.remove)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['14'][1]++,options['delete'])){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['72']++;instance.sync('delete',options,function(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['19']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['73']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['74']++;var facade={error:err,src:'destroy',options:options};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['75']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['76']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['15'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['77']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['78']++;resolve(options);}});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['13'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['79']++;finish();__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['80']++;resolve(options);}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['81']++;Y.Model.superclass.destroy.call(instance);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['82']++;return destroypromise;}},true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['83']++;Y.ITSAModelSyncPromise=ITSAModelSyncPromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['84']++;Y.Base.mix(Y.Model,[ITSAModelSyncPromise]);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['85']++;function ITSAModellistSyncPromise(){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['20']++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['86']++;Y.mix(ITSAModellistSyncPromise.prototype,{loadPromise:function(options){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['21']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['87']++;options=(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][0]++,options)||(__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['16'][1]++,{});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['88']++;var instance=this,loadpromise=new Y.Promise(function(resolve,reject){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['22']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['89']++;instance.sync('read',options,function(err,response){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.f['23']++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['90']++;var parsed,facade={options:options,response:response};__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['91']++;if(err){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['92']++;facade.error=err;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['93']++;facade.src='load';__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['94']++;instance.fire(EVT_ERROR,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['95']++;reject(new Error(err));}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['17'][1]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['96']++;if(!instance._loadEvent){__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][0]++;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['97']++;instance._loadEvent=instance.publish(EVT_LOAD,{preventable:false});}else{__cov_XDpPLj7Fz_gPyxqtPO4DtQ.b['18'][1]++;}__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['98']++;parsed=facade.parsed=PARSED(response);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['99']++;instance.reset(parsed,options);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['100']++;instance.fire(EVT_LOAD,facade);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['101']++;resolve(response,options);}});});__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['102']++;return loadpromise;}},true);__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['103']++;Y.ITSAModellistSyncPromise=ITSAModellistSyncPromise;__cov_XDpPLj7Fz_gPyxqtPO4DtQ.s['104']++;Y.Base.mix(Y.ModelList,[ITSAModellistSyncPromise]);},'gallery-2013.05.10-00-54',{'requires':['yui-base','base-base','base-build','node-base','json-parse','promise','model','model-list','yui-later']});
